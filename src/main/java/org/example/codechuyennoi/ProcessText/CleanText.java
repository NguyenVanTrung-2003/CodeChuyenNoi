package org.example.codechuyennoi.ProcessText;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;

@Component
public class CleanText {
    private static final Logger logger = LoggerFactory.getLogger(CleanText.class);

    public String cleanStoryText(String rawText) {
        if (rawText == null || rawText.isEmpty()) {
            logger.warn("VƒÉn b·∫£n th√¥ r·ªóng");
            return "";
        }
        try {
            logger.info("ƒêang l√†m s·∫°ch vƒÉn b·∫£n");
            String text = rawText;
            text = removeAds(text);

            // Ch·ªâ lo·∫°i b·ªè k√Ω t·ª± ƒë·∫∑c bi·ªát kh√¥ng c·∫ßn thi·∫øt, gi·ªØ l·∫°i c√¢u v√† ng·∫Øt d√≤ng
            String cleanedText = text
                    .replaceAll("[^\\p{L}\\p{N}\\s.,!?\"‚Äú‚Äù‚Äò‚Äô]", "")  // gi·ªØ l·∫°i c√¢u v√† d·∫•u h·ª£p l·ªá
                    .replaceAll("\\s+", " ")                          // gom kho·∫£ng tr·∫Øng
                    .replaceAll("(?m)^\\s*", "")                      // x√≥a kho·∫£ng tr·∫Øng ƒë·∫ßu d√≤ng
                    .trim();
            return cleanedText;
        } catch (Exception e) {
            logger.error("L·ªói khi l√†m s·∫°ch vƒÉn b·∫£n: {}", e.getMessage());
            return "";
        }
    }

    private String removeAds(String text) {
        // Danh s√°ch c√°c m·∫´u qu·∫£ng c√°o ph·ªï bi·∫øn
        String[] adPatterns = {
                "üçä",
                "ƒê·ªçc truy·ªán t·∫°i[^\\n]*",           // v√≠ d·ª•: ƒê·ªçc truy·ªán t·∫°i abc.xyz
                "Nh·∫•n theo d√µi[^\\n]*",            // v√≠ d·ª•: Nh·∫•n theo d√µi ƒë·ªÉ xem ch∆∞∆°ng ti·∫øp
                "Ch∆∞∆°ng m·ªõi nh·∫•t t·∫°i[^\\n]*",
                "Truy·ªán ƒë∆∞·ª£c ƒëƒÉng t·∫£i[^\\n]*",
                "Website ch√≠nh[^\\n]*",
                "Theo d√µi ƒë·ªÉ c·∫≠p nh·∫≠t[^\\n]*",
                "C·∫≠p nh·∫≠t s·ªõm nh·∫•t t·∫°i[^\\n]*",
                "Fanpage[^\\n]*",
                "Donate[^\\n]*"
        };

        for (String pattern : adPatterns) {
            text = text.replaceAll("(?i)" + pattern, "");  // (?i) ƒë·ªÉ kh√¥ng ph√¢n bi·ªát hoa th∆∞·ªùng
        }
        return text;
    }
}
